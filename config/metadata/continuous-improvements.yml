intro: |
  Software is one of the main differentiators for new products as an innovation driver. We also see 
  a shift from hardware-centric to software-centric companies in sectors like healthcare and the 
  automotive industry. 

  Software becomes an important investment for the businesses.
  In order to protect this investment, the software needs to be continuously improved and maintained.
  Refactoring is one technique to continuously improve the design of an existing code base.
  Likewise refactorings on architectural level must be considered regularly. Otherwise, software 
  erosion begins and "Technical Dept" gets accumulated.

  The Consortium of IT Software Quality (CISQ) recently published 
  [“Cost of Poor Software Quality in US.”](https://it-cisq.org/wp-content/uploads/2018/10/The-Cost-of-Poor-Quality-Software-in-the-US-2018-Report.pdf). 
  This report fills a gap in our understanding of the financial implications of poor-quality software. 

  In short, the cost of poor quality software in the US in 2018 is $2.84 trillion, 40% of which is attributed to legacy system problems and technical debt.


guides:
  - Continuous Improvement/Rewrite or Refactor
